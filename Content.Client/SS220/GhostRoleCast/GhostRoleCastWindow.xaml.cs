// Â© SS220, An EULA/CLA with a hosting restriction, full text: https://raw.githubusercontent.com/SerbiaStrong-220/space-station-14/master/CLA.txt

using System.Numerics;
using Robust.Client.Player;
using Robust.Client.AutoGenerated;
using Robust.Client.UserInterface.CustomControls;
using Robust.Client.UserInterface.XAML;
using Robust.Client.UserInterface;
using Content.Shared.SS220.GhostRoleCast;
using Robust.Shared.Timing;

namespace Content.Client.SS220.GhostRoleCast
{
    [GenerateTypedNameReferences]
    public sealed partial class GhostRoleCastWindow : DefaultWindow
    {
        [Dependency] private readonly IPlayerManager _playerManager = default!;
        [Dependency] private readonly EntityManager _entityManager = default!;
        public GhostRoleCastWindow()
        {
            RobustXamlLoader.Load(this);

            RoleNameLabel.MinSize = new Vector2(150, 0);
            RoleName.MinSize = new Vector2(300, 0);
            RoleDescriptionLabel.MinSize = new Vector2(150, 0);
            RoleDescription.MinSize = new Vector2(300, 0);
            RoleRulesLabel.MinSize = new Vector2(150, 0);
            RoleRules.MinSize = new Vector2(300, 0);
        }

        protected override void FrameUpdate(FrameEventArgs args)
        {
            base.FrameUpdate(args);

            var uid = _playerManager.LocalPlayer?.ControlledEntity;
            if (uid == null) return;

            _entityManager.TryGetComponent<GhostRoleCastComponent>(uid, out var component);
            if (component == null) return;
            component.GhostRoleName = RoleName.Text;
            component.GhostRoleDesc = RoleDescription.Text;
            component.GhostRoleRule = RoleRules.Text;
        }
    }
}
