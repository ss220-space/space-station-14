using Content.Shared.Administration;
using JetBrains.Annotations;
using Robust.Client.AutoGenerated;
using Robust.Client.Console;
using Robust.Client.UserInterface.Controls;
using Robust.Client.UserInterface.CustomControls;
using Robust.Client.UserInterface.XAML;

namespace Content.Client.Administration.UI.Tabs.RoundTab
{
    [GenerateTypedNameReferences]
    [UsedImplicitly]
    public sealed partial class ActiveGameRulesWindow : DefaultWindow
    {
        [Dependency] private readonly IEntityManager _entMan = default!;
        private List<GameRuleInfo>? _gameRulesList;
        private GameRuleInfo? _selectedGamerule;

        public event Action<GameRuleInfo?>? OnSelectionChanged;
        public IReadOnlyList<GameRuleInfo>? GameRuleInfo => _gameRulesList;

        public Func<GameRuleInfo, string, string>? OverrideText;

        public ActiveGameRulesWindow()
        {
            RobustXamlLoader.Load(this);
            IoCManager.InjectDependencies(this);
        }

        protected override void EnteredTree()
        {
            SubmitEndGameruleButton.OnPressed += SubmitEndGameruleButtonOnPressed;
            SubmitClearGamerulesButton.OnPressed += SubmitClearGamerulesButtonOnPressed;
            GameRulesList.OnSelectionChanged += OnListOnOnSelectionChanged;
        }

        private void OnListOnOnSelectionChanged(GameRuleInfo? obj)
        {
            _selectedGamerule = obj;
            SubmitEndGameruleButton.Disabled = _selectedGamerule == null;
        }

        private void SubmitEndGameruleButtonOnPressed(BaseButton.ButtonEventArgs obj)
        {
            if (_selectedGamerule == null)
                return;

            IoCManager.Resolve<IClientConsoleHost>().ExecuteCommand(
                $"endgamerule {_entMan.GetEntity(_selectedGamerule.Entity)}");

            SubmitEndGameruleButton.Disabled = true;
        }

        private void SubmitClearGamerulesButtonOnPressed(BaseButton.ButtonEventArgs obj)
        {
            IoCManager.Resolve<IClientConsoleHost>().ExecuteCommand(
                $"cleargamerules");

            SubmitEndGameruleButton.Disabled = true;
            SubmitClearGamerulesButton.Disabled = true;
        }
    }
}
